{"version":3,"sources":["api/http.ts","api/signin.ts","store/modules/auth.ts","hooks/signin/useSignIn.tsx","components/signin/index.tsx","pages/signin/index.tsx","pages/signup/index.tsx","pages/home/index.tsx","components/layout/Header.tsx","components/layout/Container.tsx","components/layout/Footer.tsx","components/layout/index.tsx","components/common/AppRoute.tsx","App.tsx","store/modules/index.ts","store/index.ts","index.tsx"],"names":["instance","axios","create","baseURL","headers","timeout","withCredentials","createAxiosForData","http","url","data","config","catch","errorFunc","createAxios","error","console","log","response","status","msg","message","alert","get","post","put","delete","signin","email","pwd","actionsTypes","loginSuccess","createAction","reducer","handleActions","state","action","isLogged","useSiginin","history","useHistory","dispatch","useDispatch","useCallback","a","code","push","Wrap","styled","div","Heading","h1","SignInForm","form","SignInButton","button","ErrorTxt","p","SignIn","props","useForm","register","handleSubmit","errors","signInSubmit","onSubmit","htmlFor","type","name","id","placeholder","ref","required","pattern","value","SignInPage","SignUpPage","HomePage","HeaderWrap","header","Header","className","to","ContainerWrap","Container","children","FooterWrap","footer","Footer","Layout","AppRoute","RouteComponent","component","layout","rest","render","undefined","GlobalStyle","createGlobalStyle","App","path","exact","combineReducers","auth","initStore","enhancer","compose","applyMiddleware","createStore","rootReducer","process","NODE_PATH","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"6QAEMA,E,OAA0BC,EAAMC,OAAO,CAC3CC,QAAS,wBACTC,QAAS,CACP,eAAgB,oBAElBC,QAAS,IACTC,iBAAiB,IAObC,EAAqB,SAACC,GAC1B,OAAO,SAACC,EAAaC,EAAYC,GAC/B,OAAOH,EAAKC,EAAKC,EAAMC,GAAQC,MAAMC,KAQnCC,EAAc,SAACN,GACnB,OAAO,SAACC,EAAaE,GACnB,OAAOH,EAAKC,EAAKE,GAAQC,MAAMC,KAQ7BA,EAAY,SAACE,GACjBC,QAAQC,IAAIF,EAAMG,UAClB,IAAMC,EAAiBJ,EAAMG,SAASC,OAChCC,EAAcL,EAAMG,SAASR,KAAKW,QACxC,OAAQF,GACN,KAAK,IAGL,KAAK,IACHG,MAAMF,KAOG,GACbG,IAAKT,EAAYd,EAASuB,KAC1BC,KAAMjB,EAAmBP,EAASwB,MAClCC,IAAKlB,EAAmBP,EAASyB,KACjCC,OAAQZ,EAAYd,EAAS0B,SChDlBC,EAAS,SAACC,EAAeC,GACpC,OAAOrB,EAAKgB,KAAK,eAAgB,CAC/BI,MAAOA,EACPC,IAAKA,K,uCCJIC,EACI,gBAGJC,EAAeC,YAAaF,GAc1BG,EAZCC,YAAc,eAEzBJ,GAA6B,SAACK,EAAOC,GACpC,OAAO,eACFD,EADL,CAEEE,UAAU,OAfJ,CACZA,UAAU,ICqBGC,MAff,WACE,IAAMC,EAAUC,cACVC,EAAWC,cAUjB,MAAO,CATcC,sBAAW,uCAAC,WAAOjC,GAAP,iBAAAkC,EAAA,6DACvBhB,EAAelB,EAAfkB,MAAOC,EAAQnB,EAARmB,IADgB,SAEVF,EAAOC,EAAOC,GAFJ,OAGN,MAHM,OAGpBnB,KAAKmC,OACdJ,EAASV,KACTQ,EAAQO,KAAK,MALgB,2CAAD,sDAO7B,M,ujCCdL,IAAMC,EAAOC,IAAOC,IAAV,KAMJC,EAAUF,IAAOG,GAAV,KAKPC,EAAaJ,IAAOK,KAAV,KAsBVC,EAAeN,IAAOO,OAAV,KAgBZC,EAAWR,IAAOS,EAAV,KAmDCC,MA7Cf,SAAgBC,GAAqB,IAAD,EACSC,cAAnCC,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,aAAcC,EADE,EACFA,OADE,EAEXzB,IAAhB0B,EAF2B,oBAIlC,OACE,oCACE,kBAACjB,EAAD,KACE,kBAACG,EAAD,4BACA,kBAACE,EAAD,CAAYa,SAAUH,EAAaE,IACjC,2BAAOE,QAAQ,SAAf,iBACA,2BACEC,KAAK,OACLC,KAAK,QACLC,GAAG,QACHC,YAAY,kCACZC,IAAKV,EAAS,CACZW,SAAU,mBACVC,QAAS,CACPC,MAAO,4CACPrD,QAAS,gCAIf,kBAAC,IAAD,CAAc0C,OAAQA,EAAQK,KAAK,UAChC,gBAAG/C,EAAH,EAAGA,QAAH,OAAiB,kBAACmC,EAAD,KAAWnC,MAE/B,2BAAO6C,QAAQ,OAAf,YACA,2BACEC,KAAK,WACLC,KAAK,MACLC,GAAG,MACHC,YAAY,wCACZC,IAAKV,EAAS,CAAEW,UAAU,MAE5B,kBAAC,IAAD,CAAcT,OAAQA,EAAQK,KAAK,MAAM/C,QAAQ,qBAC9C,gBAAGA,EAAH,EAAGA,QAAH,OAAiB,kBAACmC,EAAD,KAAWnC,MAG/B,kBAACiC,EAAD,CAAca,KAAK,UAAnB,eCzFKQ,MAJf,SAAoBhB,GAClB,OAAO,kBAAC,EAAWA,ICANiB,MAJf,WACE,OAAO,4CCGMC,MAJf,WACE,OAAO,0C,iUCCT,IAAMC,EAAa9B,IAAO+B,OAAV,KA4BDC,MAZf,WACE,OACE,kBAACF,EAAD,KACE,yBAAKG,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,c,uFCvBR,IAAMC,EAAgBnC,IAAOC,IAAV,KAYJmC,MAJf,SAAmBzB,GACjB,OAAO,kBAACwB,EAAD,KAAgBxB,EAAM0B,W,yJCT/B,IAAMC,GAAatC,IAAOuC,OAAV,KAWDC,OAJf,WACE,OAAO,kBAACF,GAAD,CAAYL,UAAU,UAAtB,WCSMQ,OAXf,SAAgB9B,GAAqB,IAC3B0B,EAAa1B,EAAb0B,SACR,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KAAYA,GACZ,kBAAC,GAAD,QCwBSK,OAxBf,SAAkB/B,GAAuB,IACpBgC,EAA4ChC,EAAvDiC,UAAmCH,EAAoB9B,EAA5BkC,OAAmBC,EADhB,YACyBnC,EADzB,wBAEtC,OACE,kBAAC,IAAD,iBACMmC,EADN,CAEEC,OAAQ,SAACpC,GACP,OAAe,OAAX8B,QAA8BO,IAAXP,EAEnB,kBAAC,GAAD,KACE,kBAACE,EAAmBhC,IAKtB,kBAAC8B,EAAD,KACE,kBAACE,EAAmBhC,S,kWCtBlC,IAAMsC,GAAcC,YAAH,MAwBFC,OAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAACF,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAUG,KAAK,IAAIC,OAAO,EAAMT,UAAWf,IAC3C,kBAAC,GAAD,CAAUuB,KAAK,UAAUR,UAAWjB,IACpC,kBAAC,GAAD,CAAUyB,KAAK,UAAUR,UAAWhB,O,SCvB7B0B,I,MAAAA,2BAAgB,CAC7BC,KAAMA,KCQOC,GARG,WAChB,IAAMC,EAEAC,mBAAQC,8BAGd,OADcC,uBAAYC,GAAaJ,GAG1BD,GCLfxF,QAAQC,IAAR,kCAAuC6F,mHAAYC,YACnDC,IAASjB,OACP,kBAAC,IAAD,CAAUkB,MAAOA,IACf,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.1d04f51e.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: 'http://localhost:3000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 3000,\n  withCredentials: true,\n})\n\n/**\n * axios 객체를 받아서 공통으로 에러처리\n * @param http axios http 메소드 객체\n */\nconst createAxiosForData = (http: any) => {\n  return (url: string, data?: any, config?: AxiosRequestConfig) => {\n    return http(url, data, config).catch(errorFunc)\n  }\n}\n\n/**\n * axios 객체를 받아서 공통으로 에러처리\n * @param http axios http 메소드 객체\n */\nconst createAxios = (http: any) => {\n  return (url: string, config?: AxiosRequestConfig) => {\n    return http(url, config).catch(errorFunc)\n  }\n}\n\n/**\n * 공통 오류 처리 함수\n * @param error\n */\nconst errorFunc = (error: any) => {\n  console.log(error.response)\n  const status: number = error.response.status\n  const msg: string = error.response.data.message\n  switch (status) {\n    case 403:\n      alert(msg)\n      break\n    case 500:\n      alert(msg)\n      break\n    default:\n      break\n  }\n}\n\nexport default {\n  get: createAxios(instance.get),\n  post: createAxiosForData(instance.post),\n  put: createAxiosForData(instance.put),\n  delete: createAxios(instance.delete),\n}\n","import http from './http'\n\n/**\n * 로그인\n * @param email 이메일\n * @param pwd 패스워드\n */\nexport const signin = (email: string, pwd: string) => {\n  return http.post('/auth/signin', {\n    email: email,\n    pwd: pwd,\n  })\n}\n","import { createAction, handleActions } from 'redux-actions'\n\nconst state = {\n  isLogged: false,\n}\n\nexport const actionsTypes = {\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n}\n\nexport const loginSuccess = createAction(actionsTypes.LOGIN_SUCCESS)\n\nconst reducer = handleActions(\n  {\n    [actionsTypes.LOGIN_SUCCESS]: (state, action) => {\n      return {\n        ...state,\n        isLogged: true,\n      }\n    },\n  },\n  state\n)\n\nexport default reducer\n","import { useCallback } from 'react'\nimport { signin } from '../../api/signin'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { loginSuccess } from '../../store/modules/auth'\n\n/**\n * 로그인처리 커스텀 훅\n */\nfunction useSiginin(): Array<any> {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const signInSubmit = useCallback(async (data) => {\n    const { email, pwd } = data\n    const result = await signin(email, pwd)\n    if (result.data.code === 200) {\n      dispatch(loginSuccess())\n      history.push('/')\n    }\n  }, [])\n\n  return [signInSubmit]\n}\n\nexport default useSiginin\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useForm, ErrorMessage } from 'react-hook-form'\nimport useSiginin from '../../hooks/signin/useSignIn'\n\nconst Wrap = styled.div`\n  margin: 20px auto;\n  width: 308px;\n  text-align: center;\n`\n\nconst Heading = styled.h1`\n  font-size: 20px;\n  margin-bottom: 20px;\n`\n\nconst SignInForm = styled.form`\n  text-align: left;\n  border: solid 1px #d8dee2;\n  padding: 10px;\n  border-radius: 5px;\n  label,\n  input {\n    display: block;\n    width: 100%;\n    box-sizing: border-box;\n    margin-bottom: 5px;\n    line-height: 28px;\n  }\n  label {\n    font-weight: bold;\n  }\n  input {\n    border: solid 1px #d8dee2;\n    padding: 0 5px;\n  }\n`\n\nconst SignInButton = styled.button`\n  width: 100%;\n  appearance: none;\n  line-height: 28px;\n  font-weight: bold;\n  color: #eee;\n  background-color: #2dba4e;\n  border: solid 1px #2bb049;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-top: 10px;\n  &:focus {\n    outline: none;\n  }\n`\n\nconst ErrorTxt = styled.p`\n  color: red;\n`\n\ntype SignInProps = {}\n\nfunction SignIn(props: SignInProps) {\n  const { register, handleSubmit, errors } = useForm()\n  const [signInSubmit] = useSiginin()\n\n  return (\n    <>\n      <Wrap>\n        <Heading>Singn in to Wootalk</Heading>\n        <SignInForm onSubmit={handleSubmit(signInSubmit)}>\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"이메일 입력\"\n            ref={register({\n              required: 'This is required',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                message: 'This Input is email only',\n              },\n            })}\n          />\n          <ErrorMessage errors={errors} name=\"email\">\n            {({ message }) => <ErrorTxt>{message}</ErrorTxt>}\n          </ErrorMessage>\n          <label htmlFor=\"pwd\">Password</label>\n          <input\n            type=\"password\"\n            name=\"pwd\"\n            id=\"pwd\"\n            placeholder=\"패스워드 입력\"\n            ref={register({ required: true })}\n          ></input>\n          <ErrorMessage errors={errors} name=\"pwd\" message=\"This is required\">\n            {({ message }) => <ErrorTxt>{message}</ErrorTxt>}\n          </ErrorMessage>\n\n          <SignInButton type=\"submit\">Sign in</SignInButton>\n        </SignInForm>\n      </Wrap>\n    </>\n  )\n}\n\nexport default SignIn\n","import React from 'react'\nimport SignIn from '../../components/signin/index'\n\ntype SignInPageProps = {}\n\nfunction SignInPage(props: SignInPageProps) {\n  return <SignIn {...props} />\n}\n\nexport default SignInPage\n","import React from 'react'\n\nfunction SignUpPage() {\n  return <div>SignUpPage</div>\n}\n\nexport default SignUpPage\n","import React from 'react'\n\nfunction HomePage() {\n  return <div>HomePage</div>\n}\n\nexport default HomePage\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst HeaderWrap = styled.header`\n  position: relative;\n  background-color: #24292e;\n  height: 50px;\n  .navbar {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    a {\n      padding: 0 5px;\n      color: #eee;\n    }\n  }\n`\n\nfunction Header() {\n  return (\n    <HeaderWrap>\n      <nav className=\"navbar\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/signin\">Sign in</Link>\n        <Link to=\"/signup\">Sign up</Link>\n      </nav>\n    </HeaderWrap>\n  )\n}\n\nexport default Header\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\n\nconst ContainerWrap = styled.div`\n  width: 100%;\n`\n\ntype ContainerProps = {\n  children: ReactNode\n}\n\nfunction Container(props: ContainerProps) {\n  return <ContainerWrap>{props.children}</ContainerWrap>\n}\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst FooterWrap = styled.footer`\n  width: 100%;\n  background-color: #fafbfc;\n  height: 50px;\n  color: #fafbfc;\n`\n\nfunction Footer() {\n  return <FooterWrap className=\"footer\">Footer</FooterWrap>\n}\n\nexport default Footer\n","import React, { ReactNode } from 'react'\nimport Header from './Header'\nimport Container from './Container'\nimport Footer from './Footer'\n\ntype LayoutProps = {\n  children: ReactNode\n}\n\nfunction Layout(props: LayoutProps) {\n  const { children } = props\n  return (\n    <>\n      <Header />\n      <Container>{children}</Container>\n      <Footer />\n    </>\n  )\n}\n\nexport default Layout\n","import React, { ComponentType, ReactNode } from 'react'\nimport { Route, RouteComponentProps, RouteChildrenProps } from 'react-router-dom'\nimport DefaultLayout from '../layout/index'\n\ntype AppRouteProps = {\n  component?: ComponentType<RouteComponentProps<any>> | ComponentType<any> | any\n  render?: (props: RouteComponentProps<any>) => ReactNode\n  children?: ((props: RouteChildrenProps<any>) => ReactNode) | ReactNode\n  path?: string | string[]\n  exact?: boolean\n  sensitive?: boolean\n  strict?: boolean\n  layout?: ComponentType<any>\n  private?: boolean\n}\nfunction AppRoute(props: AppRouteProps) {\n  const { component: RouteComponent, layout: Layout, ...rest } = props\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (Layout === null || Layout === undefined) {\n          return (\n            <DefaultLayout>\n              <RouteComponent {...props} />\n            </DefaultLayout>\n          )\n        } else {\n          return (\n            <Layout>\n              <RouteComponent {...props} />\n            </Layout>\n          )\n        }\n      }}\n    />\n  )\n}\n\nexport default AppRoute\n","import React from 'react'\nimport { BrowserRouter, Switch } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport SignInPage from './pages/signin'\nimport SignUpPage from './pages/signup'\nimport HomePage from './pages/home'\nimport AppRoute from './components/common/AppRoute'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    font-family: 'Roboto', sans-serif;\n  }\n  a { text-decoration: none; }\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\n`\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Switch>\n        <AppRoute path=\"/\" exact={true} component={HomePage} />\n        <AppRoute path=\"/signin\" component={SignInPage} />\n        <AppRoute path=\"/signup\" component={SignUpPage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import { combineReducers } from 'redux'\nimport auth from './auth'\n\nexport default combineReducers({\n  auth: auth,\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './modules'\n\nconst initStore = () => {\n  const enhancer =\n    process.env.NODE_ENV === 'production'\n      ? compose(applyMiddleware())\n      : composeWithDevTools(applyMiddleware())\n  const store = createStore(rootReducer, enhancer)\n  return store\n}\nexport default initStore()\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './store'\nimport { Provider } from 'react-redux'\n// import * as serviceWorker from './serviceWorker'\n\nconsole.log(`process.env.NODE_PATH : ${process.env.NODE_PATH}`)\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}